% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_mapper.R
\name{patch_purrr_mapper}
\alias{patch_purrr_mapper}
\title{use \code{anon::as_function_formula()} in \code{purrr} to extend the supported
syntax for anonmous functions.}
\usage{
patch_purrr_mapper(envir = parent.frame())
}
\arguments{
\item{envir}{default: parent.frame()}
}
\description{
Patch purrr to allow an extended anonymous function syntax.
}
\details{
Purrr uses the generic \code{as_mapper()} to determine how to convert the function in a
\code{map()} call into an actual function. There are methods which deal with
character values, lists and numerics.  There is no method which deals explicitly with
forumulas - instead a formula will just fall through to \code{as_mapper.default()}.

So by creating \code{as_mapper.formula()} we can catch any formulas before
\code{purrr::as_mapper.default()} and convert them into a function using
\code{anon::as_function_formula()}

Note: This doesn't really patch purrr, it just adds another function to your
environment.  It certainly feels like patching/monkey-patching the package though,
so that's why it's named as such.
}
\examples{
\dontrun{
library(anon)
patch_purrr_mapper()
map(1:3, ~value + 1)
}

}
